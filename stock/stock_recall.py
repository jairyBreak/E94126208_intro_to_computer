# -*- coding: utf-8 -*-
"""stock_recall.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sOVzHmqFnaOsoRe7gty024QzTHgYuEAe
"""

!pip install yfinance > log.txt
!pip install mplfinance
!pip install matplotlib
!pip install backtesting

import yfinance as yf
from google.colab import files
import pandas as pd
from datetime import datetime
import matplotlib
import mplfinance as mpf
from scipy.sparse import data

yf.pdr_override()
num = input()

start_date = datetime(int(input("開始日期\n西元年:")), int(input("月:")), int(input("日:")))
end_date = datetime(int(input("結束日期\n西元年")), int(input("月:")), int(input("日:")))
stock = yf.download(f"{num}.TW",start=start_date,end=end_date)
'''
stock.to_csv('stock.csv', encoding = 'utf-8-sig')
files.download('output.csv')#下載檔案
'''
print(stock)

Kfrom backtesting import Backtest, Strategy
from backtesting.lib import crossover
from backtesting.test import SMA
class SmaCross(Strategy):
    n1 = 5
    n2 = 20
    def init(self):
        self.fast_line = self.I(SMA, self.data.Close, self.n1)
        self.slow_line = self.I(SMA, self.data.Close, self.n2)

    def next(self):
        if crossover(self.fast_line, self.slow_line):
            """
            print(
                f"{self.data.index[-1]} Buy: Price: {self.data.Close[-1]}, Slow: {self.slow_line[-5:]}, Fast: {self.fast_line[-5:]}"
            )
            """
            self.buy()
        elif crossover(self.slow_line, self.fast_line):
            """
            print(
                f"{self.data.index[-1]} Sell: Price: {self.data.Close[-1]}, Slow: {self.slow_line[-5:]}, Fast: {self.fast_line[-5:]}"
            )
            """
            self.position.close()
print("回測結果：\n")
test = Backtest(
    stock,
    SmaCross,
    cash=10000,
    commission=0.004,
    exclusive_orders=True,
    trade_on_close=True,
)
result = test.run()
test.plot()
print(result,"\n")
opz = test.optimize(
    n1 = range(5,10,20),
    n2 = range(10,20,60),
    maximize="Return [%]",
    constraint = lambda p: p.n1 < p.n2
    )
opz
print(opz._strategy)
test.plot